#!/usr/bin/perl -w

use strict;
use warnings;

use feature "say";

# Open and parse the command file
if(!defined($ARGV[0])) {
	die "Need a command file!\n";
}

my $fname = shift;

my $uploadpath="";

if(defined($ARGV[0])) {
	$uploadpath = shift;
}

open(CFILE, "<$fname");

my @files;
my @part = ();
my $pname;
my %parts;

while(<CFILE>) {
	next if(/^\s*#/);
	my @line = split /\|/;
	if($line[1] != 3 && @part > 0) {
		if(!defined($pname)) {
			die "Need a description";
		}
		$parts{$pname} = ();
		foreach my $part(@part) {
			push(@{$parts{$pname}}, $part);
		}
		@part = ();
	}
	if($line[1] == 1 || $line[1] == 3) {
		my $start = undef;
		my $stop = undef;
		my $oname;
		if(exists($line[2]) && length($line[2])) {
			$start = $line[2];
		}
		if(exists($line[3]) && length($line[3])) {
			$stop = $line[3];
		}
		if(!exists($line[4]) || !length($line[4])) {
			die "Need a description";
		}
		$oname = $line[4];
		chomp $oname;
		$oname =~ s/[\$\s:!%\?-]/_/g;
		my $file = { name => $line[0], start => $start, stop => $stop, oname => $oname };
		if($line[1] == 1) {
			push(@files, $file);
		} else {
			push(@part, $file);
			if(exists($line[4]) && length($line[4])) {
				$pname = $oname;
			}
		}
	}
}

say "set -e";

say "# Plain files";

foreach my $file(@files) {
	my $start = "";
	my $stop = "";

	say "#" x (length($file->{oname}) + 4);
	say "# " . $file->{oname} . " #";
	say "#" x (length($file->{oname}) + 4);
	if(defined($file->{start})) {
		$start = "-ss " . $file->{start};
	}
	if(defined($file->{stop})) {
		$stop = "-t " . $file->{stop};
	}
	if(defined($file->{start}) && defined($file->{stop})) {
		my @itime = split /:/, $file->{start};
		my @otime = split /:/, $file->{stop};
		$otime[0]-=$itime[0];
		$otime[1]-=$itime[1];
		if($otime[1]<0) {
			$otime[0]-=1;
			$otime[1]+=60;
		}
		$otime[2]-=$itime[2];
		if($otime[2]<0) {
			$otime[1]-=1;
			$otime[2]+=60;
		}
		$stop = "-t " . $otime[0] . ":" . $otime[1] . ":" . $otime[2];
	}
	say "ln " . $file->{name} . ".dv input.dv";
	#say "avconv -i input.dv $start $stop -pass 1 -deinterlace -dialnorm -5 -passlogfile /tmp/convert.\$\$ -y " . $file->{oname} . ".webm";
	#say "avconv -i input.dv $start $stop -pass 2 -deinterlace -dialnorm -5 -passlogfile /tmp/convert.\$\$ -y " . $file->{oname} . ".webm";
	#say "rm input.dv /tmp/convert.\$\$";
	if(defined($file->{start}) || defined($file->{stop})) {
		say "avconv -i input.dv $start $stop -y -acodec copy -vcodec copy " . $file->{oname} . ".dv";
		say "rm input.dv";
	} else {
		say "mv input.dv " . $file->{oname} . ".dv";
	}
	say "dv2webm " . $file->{oname} . ".dv";
	say "rm " . $file->{oname} . ".dv";
	say "scp " . $file->{oname} . ".webm video.fosdem.org:$uploadpath";
}

say "# multipart files";

foreach my $pfile(keys %parts) {
	my @files = @{$parts{$pfile}};

	say "#" x (length($pfile) + 4);
	say "# " . $pfile . " #";
	say "#" x (length($pfile) + 4);
	foreach my $file(@files) {
		my $start = "";
		my $stop = "";

		if(defined($file->{start})) {
			$start = "-ss " . $file->{start};
		}
		if(defined($file->{stop})) {
			$stop = "-t " . $file->{stop};
		}
		if(defined($file->{start}) && defined($file->{stop})) {
			my @itime = split /:/, $file->{start};
			my @otime = split /:/, $file->{stop};
			$otime[0]-=$itime[0];
			$otime[1]-=$itime[1];
			if($otime[1]<0) {
				$otime[0]-=1;
				$otime[1]+=60;
			}
			$otime[2]-=$itime[2];
			if($otime[2]<0) {
				$otime[1]-=1;
				$otime[2]+=60;
			}
			$stop = "-t " . $otime[0] . ":" . $otime[1] . ":" . $otime[2];
		}
		if(defined($file->{start}) || defined($file->{stop})) {
			say "ln " . $file->{name} . ".dv part-pre.dv";
			say "avconv -i part-pre.dv $start $stop -y -acodec copy -vcodec copy part.dv";
			say "rm part-pre.dv";
		} else {
			say "ln " . $file->{name} . ".dv part.dv";
		}
		say "cat part.dv >> " . $pfile . ".dv";
		say "rm part.dv";
	}
	say "dv2webm " . $pfile . ".dv";
	say "rm " . $pfile . ".dv";
	say "scp " . $pfile . ".webm video.fosdem.org:$uploadpath";
}
